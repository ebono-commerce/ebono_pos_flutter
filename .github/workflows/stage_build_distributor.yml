name: Stage Distributor Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Install system dependencies
      - name: Install required dependencies
        run: |
          sudo apt-get update && sudo apt upgrade -y
          sudo apt-get install -y clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.0"

      # Get version and commit ID
      - name: Get version and commit ID
        id: vars
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //' | tr -d ' ')
          COMMIT_ID=$(git rev-parse --short HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "commit_id=$COMMIT_ID" >> $GITHUB_OUTPUT

      # Install Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # Activate Flutter Distributor
      - name: Activate Flutter Distributor
        run: dart pub global activate flutter_distributor

      # Generate the build using Flutter Distributor
      - name: Build Stage Release
        run: flutter_distributor release --name=stage --jobs=release-stage-linux-deb

      # Rename .deb file
      - name: Rename .deb file
        run: |
          mkdir -p renamed
          ORIGINAL_DEB=$(find dist/ -name '*.deb' | head -n 1)
          NEW_NAME="ebono_pos_${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.commit_id }}.deb"
          cp "$ORIGINAL_DEB" "renamed/$NEW_NAME"

      # Authenticate to GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_PRIVATE_KEY_STG }}'

      # Upload .deb to GCS
      - name: Upload .deb to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: renamed/ebono_pos_${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.commit_id }}.deb
          destination: 'ebono-release-bucket-staging'

      # Optional: Upload to GitHub as an artifact
      - name: Upload build artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: stage-release-${{ steps.vars.outputs.version }}
          path: renamed/